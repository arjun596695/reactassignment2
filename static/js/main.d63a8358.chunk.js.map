{"version":3,"sources":["logo.svg","Forms.js","App.js","reportWebVitals.js","index.js"],"names":["Forms","props","handleUsernameChange","event","setState","username","target","value","handleFeedbackChange","feedback","handleEmailChange","email","handleSubjectsChange","subjects","handleSubmit","alert","state","preventDefault","onSubmit","this","type","onChange","sub","Component","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yMAAe,I,wCCmEAA,E,kDAhEX,WAAYC,GAAO,IAAD,8BACd,cAAMA,IAQVC,qBAAqB,SAACC,GAClB,EAAKC,SAAS,CACVC,SAASF,EAAMG,OAAOC,SAXZ,EAclBC,qBAAqB,SAACL,GAClB,EAAKC,SAAS,CACVK,SAASN,EAAMG,OAAOC,SAhBZ,EAmBlBG,kBAAkB,SAACP,GACf,EAAKC,SAAS,CACVO,MAAMR,EAAMG,OAAOC,SArBT,EAwBlBK,qBAAqB,SAACT,GAClB,EAAKC,SAAS,CACVS,SAASV,EAAMG,OAAOC,SA1BZ,EA6BlBO,aAAa,SAACX,GACVY,MAAM,GAAD,OAAI,EAAKC,MAAMX,SAAf,YAA2B,EAAKW,MAAMP,SAAtC,YAAkD,EAAKO,MAAML,MAA7D,YAAsE,EAAKK,MAAMH,WACtFV,EAAMc,kBA7BN,EAAKD,MAAM,CACP,SAAW,GACX,SAAW,GACX,MAAQ,GACR,SAAW,IAND,E,0CAiClB,WACI,OACI,uBAAME,SAAUC,KAAKL,aAArB,UACA,8BACA,gDAEA,gCACC,+CACA,uBAAOM,KAAK,OAAOb,MAAOY,KAAKH,MAAMX,SAAUgB,SAAUF,KAAKjB,0BAE/D,gCACI,8CACA,uBAAOK,MAAOY,KAAKH,MAAMP,SAAUY,SAAUF,KAAKX,0BAEtD,gCACI,0CACA,uBAAOD,MAAOY,KAAKH,MAAML,MAAOU,SAAUF,KAAKT,uBAEnD,gCACI,6CACA,yBAAQH,MAAOY,KAAKH,MAAMM,IAAKD,SAAUF,KAAKP,qBAA9C,UACI,wBAAQL,MAAM,aAAd,wBACA,wBAAQA,MAAM,UAAd,qBACA,wBAAQA,MAAM,MAAd,uBAGR,wBAAQa,KAAK,SAAb,2B,GA5DQG,aCSLC,MAPf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,cAAC,EAAD,OCKSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.d63a8358.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { Component } from 'react';\r\n\r\nclass Forms extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            'username':'',\r\n            'feedback':'',\r\n            'email':'',\r\n            'subjects':''\r\n        }\r\n    }\r\n    handleUsernameChange=(event)=>{\r\n        this.setState({\r\n            username:event.target.value\r\n        })\r\n    }\r\n    handleFeedbackChange=(event)=>{\r\n        this.setState({\r\n            feedback:event.target.value\r\n        })\r\n    }  \r\n    handleEmailChange=(event)=>{\r\n        this.setState({\r\n            email:event.target.value\r\n        })\r\n    } \r\n    handleSubjectsChange=(event)=>{\r\n        this.setState({\r\n            subjects:event.target.value\r\n        })\r\n    }\r\n    handleSubmit=(event)=>{\r\n        alert(`${this.state.username} ${this.state.feedback} ${this.state.email} ${this.state.subjects}`)\r\n        event.preventDefault()\r\n    }\r\n    render(){\r\n        return(\r\n            <form onSubmit={this.handleSubmit}>\r\n            <div>\r\n            <h1>Registration</h1>\r\n            </div>\r\n            <div>\r\n             <label>First Name</label>\r\n             <input type=\"text\" value={this.state.username} onChange={this.handleUsernameChange}/>\r\n            </div>\r\n            <div>\r\n                <label>Last Name</label>\r\n                <input value={this.state.feedback} onChange={this.handleFeedbackChange}></input>\r\n            </div>\r\n            <div>\r\n                <label>Email</label>\r\n                <input value={this.state.email} onChange={this.handleEmailChange}></input>\r\n            </div>\r\n            <div>\r\n                <label>Subjects</label>\r\n                <select value={this.state.sub} onChange={this.handleSubjectsChange}>\r\n                    <option value='datamining'>DataMining</option>\r\n                    <option value='angular'>Angular</option>\r\n                    <option value='vue'>Vue</option>\r\n                </select>\r\n            </div>\r\n            <button type=\"submit\">Submit</button>\r\n            </form>\r\n        )\r\n    }\r\n}\r\nexport default Forms;","import logo from './logo.svg';\nimport './App.css';\nimport Forms from './Forms';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Forms/>\n    </div>\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}